using System;
using System.Collections.Generic;
using System.Linq;

namespace LinqTest
{
    class Program
    {

        static void Main(string[] args)
        {
            /*
            14.2. Проекция и выборка - Select()

            В предыдущем юните мы рассмотрели возможность применения простых фильтров для выборки данных по заданным условиям. Часто бывают ситуации, 
            когда выбранные данные необходимо преобразовать в новый тип. 

            Пример такой задачи: вам нужно создать отчёты по всем сотрудникам определенного возраста. Отчет — новая сущность, и скорее всего в вашей 
            программе она будет представлена отдельным классом.Здесь вам пришлось бы сначала выбрать данные по условиям, а потом создать из них отчеты, но LINQ дает возможность соединить эти операции в одну, используя проекцию.

            Проекция позволяет преобразовать данные текущей выборки в какой-либо другой тип.
            Для этого используется оператор select (также есть соответствующий метод расширения).
            */

            //спроецировали сущности класса Student в новый тип — в строки, сохранив туда значения свойства Name.

            // Подготовим данные
            List<Student> students = new List<Student>
            {
                new Student {Name="Андрей", Age=23, Languages = new List<string> {"английский", "немецкий" }},
                 new Student {Name="Сергей", Age=27, Languages = new List<string> {"английский", "французский" }},
                new Student {Name="Дмитрий", Age=29, Languages = new List<string> {"английский", "испанский" }},
                new Student {Name="Василий", Age=24, Languages = new List<string> {"испанский", "немецкий" }}
            };

            var names = from s in students select s.Name;

            // Выведем результат
            foreach (var name in names)
                Console.WriteLine(name);
        }
    }
}